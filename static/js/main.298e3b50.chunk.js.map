{"version":3,"sources":["components/ControlPanel.tsx","utilities/data.ts","components/DisplayCard.tsx","components/Description.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ControlPanel","setCard","Col","Button","onClick","items","KANJI","Math","floor","random","length","DisplayCard","card","className","Body","Title","Text","reading","kanji","meaning","Intro","App","useState","activeCard","setActiveCard","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAOO,SAASA,EAAT,GAA2E,IAApDC,EAAmD,EAAnDA,QAE1B,OAAO,eAACC,EAAA,EAAD,WAEH,+CAEA,cAACC,EAAA,EAAD,CAAQC,QACJ,kBAAMH,GCZkBI,EDYOC,GCX1BC,KAAKC,MAAMD,KAAKE,SAASJ,EAAMK,UADzC,IAA6BL,GDW5B,uB,YEVD,SAASM,EAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,KACzB,OAAO,8BACH,cAAC,IAAD,CAAeC,UAAU,OAAzB,SACI,eAAC,IAAcC,KAAf,WACI,cAAC,IAAcC,MAAf,oBACA,cAAC,IAAcC,KAAf,CAAoBH,UAAU,UAA9B,SACCD,EAAKK,UAGN,cAAC,IAAcD,KAAf,CAAoBH,UAAU,QAA9B,SACCD,EAAKM,QAGN,eAAC,IAAcF,KAAf,CAAoBH,UAAU,UAA9B,sBACUD,EAAKO,kB,oBCfxB,SAASC,IACZ,OACI,8BACI,gGACmE,uBADnE,aC4BGC,MAvBf,WAEE,MAAoCC,mBAAehB,EAAM,IAAzD,mBAAOiB,EAAP,KAAmBC,EAAnB,KAEA,OAEE,eAACC,EAAA,EAAD,CAAWZ,UAAU,MAArB,UAEE,gFAEA,cAACO,EAAD,IAEA,cAACK,EAAA,EAAD,UACE,cAACd,EAAD,CAAaC,KAAQW,MAGvB,cAACG,EAAA,EAAD,UACE,cAAC1B,EAAD,CAAcC,QAAWuB,UCblBG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.298e3b50.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Button, Col } from 'react-bootstrap';\nimport { Card } from '../interfaces/card'\nimport KANJI from '../assets/kanji.json'\nimport { getRandomElement } from '../utilities/data';\n\n\nexport function ControlPanel({setCard}: {setCard: (c: Card)=>void}): JSX.Element {\n\n    return <Col>\n\n        <h2>Control Panel</h2>        \n\n        <Button onClick={\n            () => setCard(getRandomElement(KANJI))\n        }>Random</Button>\n\n    </Col>\n\n}","\n//Got it from https://stackoverflow.com/a/4550514\nexport function getRandomElement<T>(items: T[]): T {\n    return items[Math.floor(Math.random()*items.length)];\n}\n\nexport function addScore(items: number): number {\n    return items + 1;\n}\n\nexport function removeScore(items: number): number {\n    if(items === 0){\n        return 0;\n    }\n    else{\n        return items - 1;\n    }\n}","import { Card } from \"../interfaces/card\";\nimport { Card as BootstrapCard } from 'react-bootstrap';\n\nexport function DisplayCard({card}: {card: Card}): JSX.Element {\n    return <div>\n        <BootstrapCard className=\"Card\">\n            <BootstrapCard.Body>\n                <BootstrapCard.Title>Kanji</BootstrapCard.Title>\n                <BootstrapCard.Text className=\"reading\">\n                {card.reading}\n                </BootstrapCard.Text>\n\n                <BootstrapCard.Text className=\"kanji\">\n                {card.kanji}\n                </BootstrapCard.Text>\n\n                <BootstrapCard.Text className=\"meaning\">\n                Meaning: {card.meaning}\n                </BootstrapCard.Text>\n            </BootstrapCard.Body>\n        </BootstrapCard>\n    </div>\n\n}","import React from \"react\";\n\nexport function Intro(): JSX.Element {\n    return (\n        <div>\n            <p>\n                Here is an interactive and effective way of learning Japanese! <br />\n                . . . \n\n            </p>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport KANJI from './assets/kanji.json';\nimport { ControlPanel } from './components/ControlPanel';\nimport { DisplayCard } from './components/DisplayCard';\nimport { Container, Row } from 'react-bootstrap';\nimport { Intro } from './components/Description';\nimport { Card } from './interfaces/card';\n\nfunction App(): JSX.Element {\n\n  const [activeCard, setActiveCard] = useState<Card>(KANJI[0]);\n\n  return (\n\n    <Container className=\"App\">\n\n      <h1> Welcome to the Kanji Learning Flashcard game!</h1>\n\n      <Intro></Intro>\n\n      <Container>\n        <DisplayCard card = {activeCard}></DisplayCard>\n      </Container>\n\n      <Row>\n        <ControlPanel setCard = {setActiveCard}></ ControlPanel>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}